version: '3.0'
services:
  service:
    build:
      context: .
      dockerfile: Dockerfile_service
    command: '/app/docker/service/start-server.sh'
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    environment:
      - REDIS_HOSTNAME=redis
      - REDIS_DB_NUMBER=0
      - REDIS_DB_PREFIX=local
      - PYTHONUNBUFFERED=1
    links:
      - redis
      - db

  websocket:
    build:
      context: .
      dockerfile: Dockerfile_websocket
    command: '/app/docker/websocket/start-server.sh'
    volumes:
      - .:/app
    ports:
      - "4000:3000"
    environment:
      - REDIS_HOSTNAME=redis
      - REDIS_DB_NUMBER=0
      - REDIS_DB_PREFIX=local
      - PYTHONUNBUFFERED=1
    links:
      - redis
      - db

  service_nginx:
    build:
      context: ./docker/service_nginx
    command: '/start-nginx.sh'
    ports:
      - "8000:8000"
    links:
      - service

  redis:
    build: ./docker/redis
    ports:
      - "6379:6379"

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: kanban

  task_runner:
    build:
      context: ./docker/task_runner
    command: 'sh /app/work/docker/task_runner/start-watch.sh'
    environment:
      CONTEXT_PATH: '/app/work/application/src/'
      ENTRY_NAME: 'app'
      ENTRY_PATH: '/app/work/application/src/vuejs/app.js'
      DIST_PATH: '/app/work/application/staticfiles/vuejs'
    volumes:
      - .:/app/work/
